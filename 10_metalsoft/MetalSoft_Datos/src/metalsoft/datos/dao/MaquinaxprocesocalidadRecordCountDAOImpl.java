/**
*					--DAO-Generator--
*
* Java code generated by the DAO-Generator developed by akcess(www.akcess.in)
* Date of code generation: Mon Jun 14 23:39:20 GYT 2010
*
* DAO-Generator Version 1.2
*
*/

package metalsoft.datos.dao;
import java.math.*;
import java.sql.*;
import java.net.URL;
import java.util.*;
import metalsoft.datos.exception.*;
import metalsoft.datos.dbobject.*;
import metalsoft.datos.idao.*;

/**
* 
* Implementation of MaquinaxprocesocalidadRecordCountDAO interface 
* 
*/

public class MaquinaxprocesocalidadRecordCountDAOImpl implements MaquinaxprocesocalidadRecordCountDAO
{
	public MaquinaxprocesocalidadRecordCountDAOImpl()
	{
	}
	public MaquinaxprocesocalidadRecordCount getRecordCount(Connection con) throws MaquinaxprocesocalidadRecordCountException
	{
		PreparedStatement stmt = null;
		ResultSet rs = null;
		try {
			stmt = con.prepareStatement("SELECT COUNT(*) FROM MAQUINAXPROCESOCALIDAD");
			rs = stmt.executeQuery();
			rs.next();
 			MaquinaxprocesocalidadRecordCount vo = new MaquinaxprocesocalidadRecordCount();
			vo.setCount(rs.getInt(1));
			return vo;
		}catch (SQLException sqle) {
			throw new MaquinaxprocesocalidadRecordCountException(sqle);
		}
		catch (Exception e) {
			throw new MaquinaxprocesocalidadRecordCountException(e);
		}
	}



	public MaquinaxprocesocalidadRecordCount getRecordCount(Connection con, String whereClause) throws MaquinaxprocesocalidadRecordCountException
	{
		PreparedStatement stmt = null;
		ResultSet rs = null;
		try {
			stmt = con.prepareStatement("SELECT COUNT(*) FROM MAQUINAXPROCESOCALIDAD  " + whereClause);
			rs = stmt.executeQuery();
			rs.next();
 			MaquinaxprocesocalidadRecordCount vo = new MaquinaxprocesocalidadRecordCount();
			vo.setCount(rs.getInt(1));
			return vo;
		}catch (SQLException sqle) {
			throw new MaquinaxprocesocalidadRecordCountException(sqle);
		}
		catch (Exception e) {
			throw new MaquinaxprocesocalidadRecordCountException(e);
		}
	}
}
