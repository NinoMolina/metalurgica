/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Principal.java
 *
 * Created on 12/06/2010, 02:19:22
 */
package metalsoft.presentacion;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import metalsoft.datos.PostgreSQLManager;
import metalsoft.negocio.adminusuarios.Rol;
import metalsoft.negocio.adminusuarios.Usuario;
import metalsoft.util.Fecha;

/**
 *
 * @author Nino
 */
public class Principal extends javax.swing.JFrame {

    private long idUsuario;
    private Rol[] roles;
    private Timer tiempo;
    /** Creates new form Principal */
    public Principal(long idUsuario) {
        this.idUsuario = idUsuario;
        initComponents();
        iniciarReloj();
        this.setIconImage(new ImageIcon(getClass().getResource("/img/m.jpg")).getImage());

        obtenerRolUsuario(idUsuario);
        //this.getContentPane().setBackground();
    }

    private void iniciarReloj(){
        tiempo = new Timer(1000, new ActionListener(){

            public void actionPerformed(ActionEvent evt){
                lblReloj.setText(Fecha.fechaHoraMinutoSegundoActual());
            }
        });
        tiempo.start();
    }

    public Principal() {
        initComponents();

    }

    public long getIdUsuario() {
        return idUsuario;
    }

    public void setIdUsuario(long idUsuario) {
        this.idUsuario = idUsuario;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        pnlImagen = new metalsoft.beans.JPanelBackground();
        jLabel1 = new javax.swing.JLabel();
        jPanelTransparente1 = new metalsoft.beans.JPanelTransparente();
        lblReloj = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        lblRol = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        mbrMenu = new javax.swing.JMenuBar();
        mnuInicio = new javax.swing.JMenu();
        mniCerrarSesion = new javax.swing.JMenuItem();
        mnuCompras = new javax.swing.JMenu();
        mniMateriaPrima = new javax.swing.JMenuItem();
        mniProveedor = new javax.swing.JMenuItem();
        mniRegistrarPresupuesto = new javax.swing.JMenuItem();
        mnuVentas = new javax.swing.JMenu();
        mniCliente = new javax.swing.JMenuItem();
        mniPieza = new javax.swing.JMenuItem();
        mniProducto = new javax.swing.JMenuItem();
        mniPresupuesto = new javax.swing.JMenuItem();
        mniEtapaDeProduccion = new javax.swing.JMenuItem();
        mniRegistrarConfirmacionPedido = new javax.swing.JMenuItem();
        mnuProduccion = new javax.swing.JMenu();
        mniTipoMaterial = new javax.swing.JMenuItem();
        mniMatriz = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        mniGenerarDetalleMateriaPrima = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        mniLanzarProduccion = new javax.swing.JMenuItem();
        mnuCalidad = new javax.swing.JMenu();
        mniGenerarDetalleProcedimientosCalidad = new javax.swing.JMenuItem();
        mnuFinanzas = new javax.swing.JMenu();
        mnuRRHH = new javax.swing.JMenu();
        mniListadoClientes = new javax.swing.JMenuItem();
        mniRegistrarDiaNoLaboral = new javax.swing.JMenuItem();
        registrarEmpleado = new javax.swing.JMenuItem();
        mniRegistrarAsistencia = new javax.swing.JMenuItem();
        mnuTrabajosTercerizados = new javax.swing.JMenu();
        mniEmpresaMetalurgica = new javax.swing.JMenuItem();
        mnuAlmacenamiento = new javax.swing.JMenu();
        mniAsignarMPAProduccion = new javax.swing.JMenuItem();
        mnuMantenimiento = new javax.swing.JMenu();
        mniRegistrarMaquina = new javax.swing.JMenuItem();
        mnuAyuda = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(new java.awt.Color(240, 240, 240));

        pnlImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/background.jpg"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("OCR A Extended", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 255, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("MetalSoft");

        jPanelTransparente1.setBackground(new java.awt.Color(153, 255, 153));
        jPanelTransparente1.setTran(0.25F);

        lblReloj.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblReloj.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReloj.setText("...");
        lblReloj.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 102, 0));
        jLabel2.setText("Usuario:");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 102, 0));
        jLabel3.setText("Rol:");

        lblUsuario.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblUsuario.setText("...");

        lblRol.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lblRol.setText("...");

        javax.swing.GroupLayout jPanelTransparente1Layout = new javax.swing.GroupLayout(jPanelTransparente1);
        jPanelTransparente1.setLayout(jPanelTransparente1Layout);
        jPanelTransparente1Layout.setHorizontalGroup(
            jPanelTransparente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTransparente1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addComponent(lblRol, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(lblReloj, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelTransparente1Layout.setVerticalGroup(
            jPanelTransparente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTransparente1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTransparente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReloj, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(lblUsuario)
                    .addComponent(lblRol))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlImagenLayout = new javax.swing.GroupLayout(pnlImagen);
        pnlImagen.setLayout(pnlImagenLayout);
        pnlImagenLayout.setHorizontalGroup(
            pnlImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlImagenLayout.createSequentialGroup()
                .addGroup(pnlImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlImagenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelTransparente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlImagenLayout.createSequentialGroup()
                        .addGap(572, 572, 572)
                        .addComponent(jLabel1))
                    .addGroup(pnlImagenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 778, Short.MAX_VALUE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 778, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlImagenLayout.setVerticalGroup(
            pnlImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlImagenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTransparente1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(310, 310, 310)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, Short.MAX_VALUE)
                .addContainerGap())
        );

        mnuInicio.setText("Inicio");

        mniCerrarSesion.setText("Cerrar Sesión");
        mnuInicio.add(mniCerrarSesion);

        mbrMenu.add(mnuInicio);

        mnuCompras.setText("Compras");

        mniMateriaPrima.setText("Materia Prima");
        mniMateriaPrima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMateriaPrimaActionPerformed(evt);
            }
        });
        mnuCompras.add(mniMateriaPrima);

        mniProveedor.setText("Proveedor");
        mniProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniProveedorActionPerformed(evt);
            }
        });
        mnuCompras.add(mniProveedor);

        mniRegistrarPresupuesto.setText("Presupuestar");
        mniRegistrarPresupuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniRegistrarPresupuestoActionPerformed(evt);
            }
        });
        mnuCompras.add(mniRegistrarPresupuesto);

        mbrMenu.add(mnuCompras);

        mnuVentas.setText("Ventas");
        mnuVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuVentasActionPerformed(evt);
            }
        });

        mniCliente.setText("Cliente");
        mniCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniClienteActionPerformed(evt);
            }
        });
        mnuVentas.add(mniCliente);

        mniPieza.setText("Pieza");
        mniPieza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPiezaActionPerformed(evt);
            }
        });
        mnuVentas.add(mniPieza);

        mniProducto.setText("Producto");
        mniProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniProductoActionPerformed(evt);
            }
        });
        mnuVentas.add(mniProducto);

        mniPresupuesto.setText("Pedido");
        mniPresupuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPresupuestoActionPerformed(evt);
            }
        });
        mnuVentas.add(mniPresupuesto);

        mniEtapaDeProduccion.setText("Etapa de Producción");
        mniEtapaDeProduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniEtapaDeProduccionActionPerformed(evt);
            }
        });
        mnuVentas.add(mniEtapaDeProduccion);

        mniRegistrarConfirmacionPedido.setText("Confirmar Pedido");
        mniRegistrarConfirmacionPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniRegistrarConfirmacionPedidoActionPerformed(evt);
            }
        });
        mnuVentas.add(mniRegistrarConfirmacionPedido);

        mbrMenu.add(mnuVentas);

        mnuProduccion.setText("Producción");

        mniTipoMaterial.setText("Tipo Material");
        mniTipoMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniTipoMaterialActionPerformed(evt);
            }
        });
        mnuProduccion.add(mniTipoMaterial);

        mniMatriz.setText("Matriz");
        mniMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMatrizActionPerformed(evt);
            }
        });
        mnuProduccion.add(mniMatriz);

        jMenuItem1.setText("Generar Detalle Etapas Producción");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnuProduccion.add(jMenuItem1);

        mniGenerarDetalleMateriaPrima.setText("Generar Detalle Materia Prima");
        mniGenerarDetalleMateriaPrima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniGenerarDetalleMateriaPrimaActionPerformed(evt);
            }
        });
        mnuProduccion.add(mniGenerarDetalleMateriaPrima);

        jMenuItem2.setText("Registrar Planificación");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        mnuProduccion.add(jMenuItem2);

        mniLanzarProduccion.setText("Lanzar Producción");
        mniLanzarProduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLanzarProduccionActionPerformed(evt);
            }
        });
        mnuProduccion.add(mniLanzarProduccion);

        mbrMenu.add(mnuProduccion);

        mnuCalidad.setText("Calidad");

        mniGenerarDetalleProcedimientosCalidad.setText("Generar Detalle Procedimientos Calidad");
        mniGenerarDetalleProcedimientosCalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniGenerarDetalleProcedimientosCalidadActionPerformed(evt);
            }
        });
        mnuCalidad.add(mniGenerarDetalleProcedimientosCalidad);

        mbrMenu.add(mnuCalidad);

        mnuFinanzas.setText("Finanzas");
        mbrMenu.add(mnuFinanzas);

        mnuRRHH.setText("RRHH");

        mniListadoClientes.setText("Listado Clientes");
        mniListadoClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniListadoClientesActionPerformed(evt);
            }
        });
        mnuRRHH.add(mniListadoClientes);

        mniRegistrarDiaNoLaboral.setText("Registrar Día no Laboral");
        mniRegistrarDiaNoLaboral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniRegistrarDiaNoLaboralActionPerformed(evt);
            }
        });
        mnuRRHH.add(mniRegistrarDiaNoLaboral);

        registrarEmpleado.setText("Registrar Empleado");
        registrarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarEmpleadoActionPerformed(evt);
            }
        });
        mnuRRHH.add(registrarEmpleado);

        mniRegistrarAsistencia.setText("Registrar Asistencia");
        mniRegistrarAsistencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniRegistrarAsistenciaActionPerformed(evt);
            }
        });
        mnuRRHH.add(mniRegistrarAsistencia);

        mbrMenu.add(mnuRRHH);

        mnuTrabajosTercerizados.setText("Trabajos Tercerizados");

        mniEmpresaMetalurgica.setText("Empresa Metalúrgica");
        mniEmpresaMetalurgica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniEmpresaMetalurgicaActionPerformed(evt);
            }
        });
        mnuTrabajosTercerizados.add(mniEmpresaMetalurgica);

        mbrMenu.add(mnuTrabajosTercerizados);

        mnuAlmacenamiento.setText("Almacenamiento");

        mniAsignarMPAProduccion.setText("Asignar MP a Producción");
        mniAsignarMPAProduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAsignarMPAProduccionActionPerformed(evt);
            }
        });
        mnuAlmacenamiento.add(mniAsignarMPAProduccion);

        mbrMenu.add(mnuAlmacenamiento);

        mnuMantenimiento.setText("Mantenimiento");

        mniRegistrarMaquina.setText("Registrar Máquina");
        mniRegistrarMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniRegistrarMaquinaActionPerformed(evt);
            }
        });
        mnuMantenimiento.add(mniRegistrarMaquina);

        mbrMenu.add(mnuMantenimiento);

        mnuAyuda.setText("Ayuda");
        mbrMenu.add(mnuAyuda);

        setJMenuBar(mbrMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlImagen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniListadoClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniListadoClientesActionPerformed
    }//GEN-LAST:event_mniListadoClientesActionPerformed

    private void mniClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniClienteActionPerformed
        try {
            JFrameManager.crearVentana(ABMCliente.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniClienteActionPerformed

    private void mniProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniProductoActionPerformed
        try {
            JFrameManager.crearVentana(ABMProducto.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniProductoActionPerformed

    private void mnuVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuVentasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuVentasActionPerformed

    private void mniPresupuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPresupuestoActionPerformed
        try {
            JFrameManager.crearVentana(ABMPedidoPresupuesto.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniPresupuestoActionPerformed

    private void mniPiezaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPiezaActionPerformed
        try {
            JFrameManager.crearVentana(ABMPieza.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniPiezaActionPerformed

    private void mniEtapaDeProduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniEtapaDeProduccionActionPerformed
        try {
            JFrameManager.crearVentana(ABMEtapaDeProduccion.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniEtapaDeProduccionActionPerformed

    private void mniTipoMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniTipoMaterialActionPerformed
        try {
            JFrameManager.crearVentana(ABMTipoMaterial.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniTipoMaterialActionPerformed

    private void mniMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMatrizActionPerformed
        try {
            JFrameManager.crearVentana(ABMMatriz.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniMatrizActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            JFrameManager.crearVentana(GenerarDetalleEtapasProduccion.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void mniMateriaPrimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMateriaPrimaActionPerformed
        try {
            JFrameManager.crearVentana(ABMMateriaPrima.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniMateriaPrimaActionPerformed

    private void mniGenerarDetalleProcedimientosCalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniGenerarDetalleProcedimientosCalidadActionPerformed
        try {
            JFrameManager.crearVentana(GenerarDetalleProcesosCalidad.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniGenerarDetalleProcedimientosCalidadActionPerformed

    private void mniGenerarDetalleMateriaPrimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniGenerarDetalleMateriaPrimaActionPerformed
        try {
            JFrameManager.crearVentana(GenerarDetalleMateriaPrima.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniGenerarDetalleMateriaPrimaActionPerformed

    private void mniProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniProveedorActionPerformed
        try {
            JFrameManager.crearVentana(ABMProveedor.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniProveedorActionPerformed

    private void mniRegistrarPresupuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniRegistrarPresupuestoActionPerformed
        try {
            JFrameManager.crearVentana(RegistrarPresupuesto.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniRegistrarPresupuestoActionPerformed

    private void mniEmpresaMetalurgicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniEmpresaMetalurgicaActionPerformed
//          try {
//            JFrameManager.crearVentana(ABMEmpresaMetalurgica.class.getName());
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_mniEmpresaMetalurgicaActionPerformed

    private void mniRegistrarDiaNoLaboralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniRegistrarDiaNoLaboralActionPerformed
        try {
            JFrameManager.crearVentana(RegistrarDiaNoLaboral.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniRegistrarDiaNoLaboralActionPerformed

    private void mniRegistrarConfirmacionPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniRegistrarConfirmacionPedidoActionPerformed
        try {
            JFrameManager.crearVentana(RegistrarConfirmacionPedido.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniRegistrarConfirmacionPedidoActionPerformed

    private void registrarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarEmpleadoActionPerformed
        try {
            JFrameManager.crearVentana(ABMEmpleado.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_registrarEmpleadoActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            JFrameManager.crearVentana(RegistrarPlanificacionProduccion.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void mniLanzarProduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLanzarProduccionActionPerformed
        try {
            JFrameManager.crearVentana(RegistrarLanzamientoProduccion.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniLanzarProduccionActionPerformed

    private void mniRegistrarAsistenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniRegistrarAsistenciaActionPerformed
        try {
            JFrameManager.crearVentana(RegistrarAsistencia.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniRegistrarAsistenciaActionPerformed

    private void mniAsignarMPAProduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAsignarMPAProduccionActionPerformed
        try {
            JFrameManager.crearVentana(AsignarMateriaPrimaAProduccion.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniAsignarMPAProduccionActionPerformed

    private void mniRegistrarMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniRegistrarMaquinaActionPerformed
        try {
            JFrameManager.crearVentana(ABMMaquina.class.getName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mniRegistrarMaquinaActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private metalsoft.beans.JPanelTransparente jPanelTransparente1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblReloj;
    private javax.swing.JLabel lblRol;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JMenuBar mbrMenu;
    private javax.swing.JMenuItem mniAsignarMPAProduccion;
    private javax.swing.JMenuItem mniCerrarSesion;
    private javax.swing.JMenuItem mniCliente;
    private javax.swing.JMenuItem mniEmpresaMetalurgica;
    private javax.swing.JMenuItem mniEtapaDeProduccion;
    private javax.swing.JMenuItem mniGenerarDetalleMateriaPrima;
    private javax.swing.JMenuItem mniGenerarDetalleProcedimientosCalidad;
    private javax.swing.JMenuItem mniLanzarProduccion;
    private javax.swing.JMenuItem mniListadoClientes;
    private javax.swing.JMenuItem mniMateriaPrima;
    private javax.swing.JMenuItem mniMatriz;
    private javax.swing.JMenuItem mniPieza;
    private javax.swing.JMenuItem mniPresupuesto;
    private javax.swing.JMenuItem mniProducto;
    private javax.swing.JMenuItem mniProveedor;
    private javax.swing.JMenuItem mniRegistrarAsistencia;
    private javax.swing.JMenuItem mniRegistrarConfirmacionPedido;
    private javax.swing.JMenuItem mniRegistrarDiaNoLaboral;
    private javax.swing.JMenuItem mniRegistrarMaquina;
    private javax.swing.JMenuItem mniRegistrarPresupuesto;
    private javax.swing.JMenuItem mniTipoMaterial;
    private javax.swing.JMenu mnuAlmacenamiento;
    private javax.swing.JMenu mnuAyuda;
    private javax.swing.JMenu mnuCalidad;
    private javax.swing.JMenu mnuCompras;
    private javax.swing.JMenu mnuFinanzas;
    private javax.swing.JMenu mnuInicio;
    private javax.swing.JMenu mnuMantenimiento;
    private javax.swing.JMenu mnuProduccion;
    private javax.swing.JMenu mnuRRHH;
    private javax.swing.JMenu mnuTrabajosTercerizados;
    private javax.swing.JMenu mnuVentas;
    private metalsoft.beans.JPanelBackground pnlImagen;
    private javax.swing.JMenuItem registrarEmpleado;
    // End of variables declaration//GEN-END:variables

    public void obtenerRolUsuario(long idUsuario) {
        roles = Usuario.obtenerRoles(idUsuario);
        setTitle("METALSOFT - INICIO [Rol: " + roles[0].getRol() + "]");
    }
}
