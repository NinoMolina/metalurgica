/*
 * PllaPrincipalRegistrarPedido.java
 *
 * Created on 7 de junio de 2008, 16:22
 */

package pkgCasosDeUso.pkgCompras.RegistrarPedidoProveedor;

import pkgRecursosDeSoporte.Pantalla;
import pkgRecursosDeSoporte.ValText;
import pkgCasosDeUso.pkgCompras.RegistrarPedidoProveedor.PllaDetallePedido;
import java.util.Date;
import java.util.Calendar;
import javax.swing.DefaultListModel;
import pkgRecursosDeSoporte.*;
import javax.swing.table.DefaultTableModel;
import pkgClasesDeNegocio.CuentaCorriente.Proveedor;
import pkgClasesDeNegocio.CuentaCorriente.RepresentanteDeProveedor;
import pkgClasesDeNegocio.Ventas.Telefono;
import pkgRecursosDeSoporte.pkgLista.Iterador;
import pkgRecursosDeSoporte.pkgLista.Lista;

/**
 *
 * @author  Armando
 */
public class PllaPrincipalRegistrarPedido extends javax.swing.JDialog {
    
    private GestorRegistrarPedidoProveedor gestor=new GestorRegistrarPedidoProveedor();
    private DefaultListModel lstModelProveedor=new DefaultListModel();
    
    private String[] columnasRepresentantes={"Nombre","Apellido","Teléfono"};
    private DTableModel dtmRepresentantes=new DTableModel(columnasRepresentantes,10);
    
    
    /** Creates new form PllaPrincipalRegistrarPedido */
    public PllaPrincipalRegistrarPedido() {
        initComponents();
        
    }
    
    public void opcionNuevoPedidoProveedor(){
     this.abrirVentana();
    }

    public void mostrarProveedores(Lista proveedores) {
        Iterador iteradorProveedores=proveedores.crearIterador();
        
        while(iteradorProveedores.siguiente()){
         Proveedor proveedor=(Proveedor)iteradorProveedores.getElementoActual();
         
         this.lstModelProveedor.addElement(proveedor.getRazonSocial());
         

        }
        
        
        
    }

    public void solicitarIngresoDatosMinimos() {
        
        this.mostrarMensajePantalla("No se puede registrar el pedido porque no existen productos agregados al mismo",Mensaje.TIPO_AVISO);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPProveedor = new javax.swing.JPanel();
        lblRazonSocial = new javax.swing.JLabel();
        txtRazonSocial = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        jSPProveedores = new javax.swing.JScrollPane();
        lstProveedores = new javax.swing.JList();
        btnNuevoProveedor = new javax.swing.JButton();
        btnLlamadaCUTipo2 = new javax.swing.JButton();
        jPPedido = new javax.swing.JPanel();
        lblRepresentanteProveedor = new javax.swing.JLabel();
        jSPRepresentantes = new javax.swing.JScrollPane();
        tblRepresentantes = new javax.swing.JTable();
        lblFechaRecepcion = new javax.swing.JLabel();
        lblHoraRecepcion = new javax.swing.JLabel();
        jSpHoraRecepcion = new javax.swing.JSpinner();
        jSpMinutoRecepcion = new javax.swing.JSpinner();
        lblSeparadorHora = new javax.swing.JLabel();
        lblFechaRealizacion = new javax.swing.JLabel();
        lblHoraRealizacion = new javax.swing.JLabel();
        lblMuestraFechaRealizacion = new javax.swing.JLabel();
        lblMuestraHoraRealizacion = new javax.swing.JLabel();
        jCdarFRecepcion = new com.toedter.calendar.JDateChooser();
        btnDetallePedido = new javax.swing.JButton();
        btnVerDetalle = new javax.swing.JButton();
        btnRegistrarPedido = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnNuevoPedido = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar Pedido Proveedor");
        setResizable(false);

        jPProveedor.setBorder(javax.swing.BorderFactory.createTitledBorder("Proveedor"));
        jPProveedor.setEnabled(false);

        lblRazonSocial.setText("Razón Social:");

        txtRazonSocial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRazonSocialKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRazonSocialKeyReleased(evt);
            }
        });

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        lstProveedores.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstProveedores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lstProveedoresKeyPressed(evt);
            }
        });
        jSPProveedores.setViewportView(lstProveedores);

        btnNuevoProveedor.setText("Nuevo Representante PRUEBA!!!");
        btnNuevoProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoProveedorActionPerformed(evt);
            }
        });

        btnLlamadaCUTipo2.setText("Nuevo Representante, se le pasa el proveedor!!!");
        btnLlamadaCUTipo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLlamadaCUTipo2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPProveedorLayout = new javax.swing.GroupLayout(jPProveedor);
        jPProveedor.setLayout(jPProveedorLayout);
        jPProveedorLayout.setHorizontalGroup(
            jPProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPProveedorLayout.createSequentialGroup()
                .addGroup(jPProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLlamadaCUTipo2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                    .addComponent(btnNuevoProveedor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                    .addComponent(jSPProveedores, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPProveedorLayout.createSequentialGroup()
                        .addComponent(lblRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(62, 62, 62))
        );
        jPProveedorLayout.setVerticalGroup(
            jPProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPProveedorLayout.createSequentialGroup()
                .addGroup(jPProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRazonSocial)
                    .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAceptar))
                .addGap(18, 18, 18)
                .addComponent(jSPProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNuevoProveedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLlamadaCUTipo2)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPPedido.setBorder(javax.swing.BorderFactory.createTitledBorder("Pedido"));

        lblRepresentanteProveedor.setText("Representante:");

        tblRepresentantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Teléfono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRepresentantes.setEnabled(false);
        jSPRepresentantes.setViewportView(tblRepresentantes);

        lblFechaRecepcion.setText("Fecha Posible de Recepción:");

        lblHoraRecepcion.setText("Hora Posible de Recepción:");

        jSpHoraRecepcion.setEnabled(false);
        jSpHoraRecepcion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpHoraRecepcionStateChanged(evt);
            }
        });

        jSpMinutoRecepcion.setEnabled(false);
        jSpMinutoRecepcion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpMinutoRecepcionStateChanged(evt);
            }
        });

        lblSeparadorHora.setText(":");
        lblSeparadorHora.setEnabled(false);

        lblFechaRealizacion.setText("Fecha Realización:");

        lblHoraRealizacion.setText("Hora Realización:");

        lblMuestraFechaRealizacion.setText("<<Fecha>>");
        lblMuestraFechaRealizacion.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblMuestraHoraRealizacion.setText("<<00:00>>");
        lblMuestraHoraRealizacion.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPPedidoLayout = new javax.swing.GroupLayout(jPPedido);
        jPPedido.setLayout(jPPedidoLayout);
        jPPedidoLayout.setHorizontalGroup(
            jPPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPedidoLayout.createSequentialGroup()
                .addGroup(jPPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRepresentanteProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSPRepresentantes, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addGroup(jPPedidoLayout.createSequentialGroup()
                        .addGroup(jPPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFechaRealizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMuestraFechaRealizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jCdarFRecepcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblFechaRecepcion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                        .addGroup(jPPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPPedidoLayout.createSequentialGroup()
                                .addComponent(jSpHoraRecepcion, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSeparadorHora, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpMinutoRecepcion, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblHoraRecepcion, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMuestraHoraRealizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHoraRealizacion))))
                .addContainerGap())
        );
        jPPedidoLayout.setVerticalGroup(
            jPPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPPedidoLayout.createSequentialGroup()
                .addComponent(lblRepresentanteProveedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSPRepresentantes, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPPedidoLayout.createSequentialGroup()
                        .addComponent(lblFechaRealizacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMuestraFechaRealizacion)
                        .addGap(26, 26, 26)
                        .addComponent(lblFechaRecepcion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCdarFRecepcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPPedidoLayout.createSequentialGroup()
                        .addComponent(lblHoraRealizacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMuestraHoraRealizacion)
                        .addGap(26, 26, 26)
                        .addComponent(lblHoraRecepcion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpHoraRecepcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSeparadorHora)
                            .addComponent(jSpMinutoRecepcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(107, 107, 107))
        );

        btnDetallePedido.setText("Agregar Productos");
        btnDetallePedido.setEnabled(false);
        btnDetallePedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetallePedidoActionPerformed(evt);
            }
        });

        btnVerDetalle.setText("Ver Pedido");
        btnVerDetalle.setEnabled(false);
        btnVerDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerDetalleActionPerformed(evt);
            }
        });

        btnRegistrarPedido.setText("Registrar Pedido");
        btnRegistrarPedido.setEnabled(false);
        btnRegistrarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarPedidoActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnNuevoPedido.setText("Nuevo Pedido");
        btnNuevoPedido.setEnabled(false);
        btnNuevoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnDetallePedido, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnVerDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)))
                        .addComponent(btnRegistrarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNuevoPedido, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                        .addGap(0, 0, 0)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDetallePedido)
                    .addComponent(btnRegistrarPedido)
                    .addComponent(btnNuevoPedido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVerDetalle)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
      this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtRazonSocialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRazonSocialKeyPressed
      
    }//GEN-LAST:event_txtRazonSocialKeyPressed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
    try{     
      
     //String palabra=ValText.getPrimerCrtMayuscula(this.txtRazonSocial.getText().trim());   
     //boolean res=this.ubicarPalabra(palabra);
     
       String razonSocialProveedor=(String)this.lstProveedores.getSelectedValue(); 
     
     
       if(razonSocialProveedor!=null){
        this.tomarSeleccionProveedor(razonSocialProveedor);
       } 
       else{
        this.mostrarMensajePantalla("Debe seleccioanr antes el proveedor",Mensaje.TIPO_AVISO);
       }
       
       
       
          
     
     
    }
    catch(Exception ex){
     this.lstProveedores.setSelectedValue(this.lstModelProveedor.get(0),true);
    }
}//GEN-LAST:event_btnAceptarActionPerformed

   
    
    private void tomarSeleccionProveedor(String razonSocial){
     this.gestor.tomarProveedor(razonSocial);
    }
    
    
    
    private void txtRazonSocialKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRazonSocialKeyReleased
  
   try{     
        
    if(evt.getKeyCode()==10){
       String razonSocialProveedor=(String)this.lstProveedores.getSelectedValue(); 
       if(razonSocialProveedor!=null){this.tomarSeleccionProveedor(razonSocialProveedor);} 
       else{this.mostrarMensajePantalla("Debe seleccioanr antes el proveedor",Mensaje.TIPO_AVISO);}
     }
    
     else{
       String palabra=ValText.getPrimerCrtMayuscula(this.txtRazonSocial.getText().trim());   
       this.ubicarPalabra(palabra);
     }   
    
   }
   catch(Exception ex){
    this.lstProveedores.setSelectedValue(this.lstModelProveedor.get(0),true);
   }
        
  
    }//GEN-LAST:event_txtRazonSocialKeyReleased

    private void limpiarTablaRepresentantes(){
     for(int i=0;i<tblRepresentantes.getRowCount();i++){
      this.tblRepresentantes.setValueAt("",i,0);
      this.tblRepresentantes.setValueAt("",i,1);
      this.tblRepresentantes.setValueAt("",i,2);
      
     }
     this.tblRepresentantes.setShowGrid(true);
    }
    
    public void mostrarRepresentantesProveedor(Lista representantes) {
    
        this.limpiarTablaRepresentantes();
        
        
        Iterador iteradorRepresentantes=representantes.crearIterador();
        int fila=0;
        
        //if(iteradorRepresentantes.listaVacia()){
          // this.dtmRepresentantes.setRowCount(10);
           //return; 
        //}
        
        this.dtmRepresentantes.setRowCount(iteradorRepresentantes.getCantidadElementos());
        
        while(iteradorRepresentantes.siguiente()){
         RepresentanteDeProveedor representante=(RepresentanteDeProveedor) iteradorRepresentantes.getElementoActual();
         
         this.tblRepresentantes.setValueAt(representante.getNombre(), fila, 0);
         this.tblRepresentantes.setValueAt(representante.getApellido(), fila, 1);
         
         Iterador itTelefono=representante.getTelefonos().crearIterador();
         if(itTelefono.listaVacia()==false){   
          Telefono telefono=(Telefono) itTelefono.getElementoActual();
          String numero=ValText.getStringInt(telefono.getNumero());
          String caracteristica=ValText.getStringInt(telefono.getCaracteristica());
          String numeroTelefono=caracteristica+"-"+numero;
          
          this.tblRepresentantes.setValueAt(numeroTelefono,fila, 2); 
         }
         else{
          this.tblRepresentantes.setValueAt("No posee",fila, 2);
         }
      
         fila++;   
        }
        
        this.tblRepresentantes.setShowGrid(true);
        
        
        
    }
    
    public void mostrarFechaHoraSistema(Date fecha) {
     
         this.jCdarFRecepcion.setDate(fecha);
      
         this.jSpHoraRecepcion.setValue(new Integer(fecha.getHours()));
         this.jSpMinutoRecepcion.setValue(new Integer(fecha.getMinutes()));
    
        String fechaRealizacion=ValText.getFormatStringFecha(fecha);
        String horaRealizacion=ValText.getFormatStringHora(fecha);
        this.lblMuestraFechaRealizacion.setText(fechaRealizacion);
        this.lblMuestraHoraRealizacion.setText(horaRealizacion);
        
        this.habilitarDatosPedido();
        this.deshabiltarBusquedaProveedor();
        
    }
    
    
      private boolean ubicarPalabra(String palabra){
    
       char palabraV[]=palabra.toUpperCase().toCharArray();
        
        int cantPalabras=this.lstModelProveedor.getSize();
        int tamPalabraV=palabraV.length;
        
        
        for(int i=0;i<cantPalabras;i++){
        
         String valorList=(String)this.lstModelProveedor.get(i);
         String valorListaMay=valorList.toUpperCase();
         
         char valorListV[]=valorListaMay.toCharArray();
         
         int j=0;
         if(valorListV.length>=tamPalabraV){
             for(j=0;j<tamPalabraV && palabraV[j]==valorListV[j];j++);
         }
         
        if(j==tamPalabraV){
          this.lstProveedores.setSelectedValue(valorList,true);   
          
          return true;   
        }
         
        }
        
        return false;
    } 
    
    private void btnDetallePedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetallePedidoActionPerformed
       
        this.gestor.buscarProductosProveedor();
    }//GEN-LAST:event_btnDetallePedidoActionPerformed

    private void btnRegistrarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarPedidoActionPerformed
        
      
     /*Llamar a los tomar de la plla. Luego en cada uno llamar al metodo del gestor correspondiente. 
       Ir seteando los datos al pedido.
      *Si el gestor no tiene detalles cargados, no registrar el pedido.
      *La verificacion hacerla en el gestor, si no tiene detalles el gestor
      *mandar un mensaje por la pantalla y no registrar el pedido.  
      */
        
      
      if(this.gestor.existenDetalles()){  
         this.tomarSeleccionRepresentanteProveedor();
         this.tomarSeleccionFechaHoraRecepcion();   
         
      }
      else{
       this.mostrarMensajePantalla("No existen productos agregados al pedido. No se puede registrar el Pedido",Mensaje.TIPO_AVISO);
      }

        
        
}//GEN-LAST:event_btnRegistrarPedidoActionPerformed

    private void btnNuevoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoPedidoActionPerformed
                      
        
        
       if(this.gestor.existenDetalles()){
      
        int opcion=Mensaje.mensaje_Consulta_YES_NO_OPTION("Existen productos cargados. Si realiza un nuevo pedido, no se tendrán en cuenta los productos ya cargados", "Nuevo Pedido", Mensaje.TIPO_INTERROGACION);
    
        
        if(opcion==0){
          this.gestor.cancelarPedidoProveedor();
          this.habilitarBusquedaProveedor();
          this.limpiarDatosPedido();
          this.deshabilitarDatosPedido();   
        }
      
       } 
       else{
          this.gestor.cancelarPedidoProveedor();
          this.habilitarBusquedaProveedor();
          this.limpiarDatosPedido();
          this.deshabilitarDatosPedido();   
       
       }
        
        
        
         
    }//GEN-LAST:event_btnNuevoPedidoActionPerformed

    private void lstProveedoresKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lstProveedoresKeyPressed
       if(evt.getKeyCode()==10){
         this.txtRazonSocial.setText((String)this.lstProveedores.getSelectedValue());
         this.tomarSeleccionProveedor((String)this.lstProveedores.getSelectedValue());
     }
    }//GEN-LAST:event_lstProveedoresKeyPressed

    private void btnVerDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerDetalleActionPerformed
      
     this.mostrarPedido();    
        
    }//GEN-LAST:event_btnVerDetalleActionPerformed

    private void jSpHoraRecepcionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpHoraRecepcionStateChanged
           
        
       Integer valor=(Integer) this.jSpHoraRecepcion.getValue();
       
       if(valor!=null){
       
        String valorCad=ValText.getStringInt(valor.intValue());   
         
        if(valor.intValue()<0){
         this.jSpHoraRecepcion.setValue(new Integer(23));
         return;
        }
        
        if(valor.intValue()>23){
         this.jSpHoraRecepcion.setValue(new Integer(0));
         return;
        }
        
        if(ValText.existeLetras(valorCad)){
         this.mostrarHoraActual();
            
        }
        
       
       }
        
       
    }//GEN-LAST:event_jSpHoraRecepcionStateChanged

    private void mostrarHoraActual(){
    
       Date fecha=new Date();
       fecha.setTime(System.currentTimeMillis());
      
       this.jSpHoraRecepcion.setValue(new Integer(fecha.getHours()));
       
    }
    
    private void mostrarMinutosActual(){
       Date fecha=new Date();
       fecha.setTime(System.currentTimeMillis());  
        
       this.jSpMinutoRecepcion.setValue(new Integer(fecha.getMinutes()));
    
    }
    
    
    private void jSpMinutoRecepcionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpMinutoRecepcionStateChanged
       Integer valor=(Integer) this.jSpMinutoRecepcion.getValue();
       
       if(valor!=null){
       
        String valorCad=ValText.getStringInt(valor.intValue());   
         
        if(valor.intValue()<0){
         this.jSpMinutoRecepcion.setValue(new Integer(59));
         return;
        }
        
        if(valor.intValue()>59){
         this.jSpMinutoRecepcion.setValue(new Integer(0));
         return;
        }
        
        if(ValText.existeLetras(valorCad)){
         this.mostrarMinutosActual();
            
        }
        
       
       }
    }//GEN-LAST:event_jSpMinutoRecepcionStateChanged

    private void btnNuevoProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoProveedorActionPerformed
        gestor.llamarCURegistrarRepresentanteProveedor();
    }//GEN-LAST:event_btnNuevoProveedorActionPerformed

    private void btnLlamadaCUTipo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLlamadaCUTipo2ActionPerformed
        String proveedor=ValText.getString_Object(this.lstProveedores.getSelectedValue());
        if(proveedor!=null){
         gestor.llamarCURegistrarRepresentanteProveedor(proveedor);
        }
        else{
         this.mostrarMensajePantalla("Seleccione antes el proveedor",Mensaje.TIPO_ERROR);
        }
        
        
    }//GEN-LAST:event_btnLlamadaCUTipo2ActionPerformed
    
    private void mostrarPedido(){
     
      if(!this.gestor.existenDetalles()){
        this.mostrarMensajePantalla("No existen productos agregados al pedido",Mensaje.TIPO_AVISO);
        return;  
      }
       
      PllaConsultaDetalle pllaConsultaDetalle=new PllaConsultaDetalle();
     
      Date fRecepcion=this.jCdarFRecepcion.getDate();
      Date fPedido=new Date();
      fPedido.setTime(System.currentTimeMillis());
     
      pllaConsultaDetalle.setRepresentante(this.getNomRepresentante());
      pllaConsultaDetalle.setFechaPedido(fPedido);
      pllaConsultaDetalle.setFechaRecepcion(fRecepcion);
     
      pllaConsultaDetalle.abrirVentana(gestor);
     
    }
    
  private String getNomRepresentante(){
     
       String representante=null; 
        
       int filaSeleccionada=this.tblRepresentantes.getSelectedRow();
     
     if(filaSeleccionada<0){
       filaSeleccionada=0;
     }
     
     String nombreRepre=(String) this.tblRepresentantes.getValueAt(filaSeleccionada,0);
     String appRepre=null;
     
     if(nombreRepre!=null){
       appRepre=(String) this.tblRepresentantes.getValueAt(filaSeleccionada,1);
    }
     
    representante=appRepre+" "+nombreRepre; 
     
    return representante; 
     
    }  
     

    
    private void tomarSeleccionFechaHoraRecepcion(){
   
       Date fRecepcion=this.jCdarFRecepcion.getDate();
       String hRecepcion=this.jSpHoraRecepcion.getValue().toString()+":"+this.jSpHoraRecepcion.getValue().toString()+":00";
       
       this.gestor.tomarFechaHoraRecepcion(fRecepcion,hRecepcion);
    
    }
    
   private void tomarSeleccionRepresentanteProveedor(){
     //Tomar la seleccion de la tabla
     
    if(this.dtmRepresentantes.getRowCount()>0){
     
     int filaSeleccionada=this.tblRepresentantes.getSelectedRow();
     
     
     
     if(filaSeleccionada<0){
      filaSeleccionada=0;
     }
     
          
     String nombreRepre=(String) this.tblRepresentantes.getValueAt(filaSeleccionada,0);
     
     if(nombreRepre!=null){
       String appRepre=(String) this.tblRepresentantes.getValueAt(filaSeleccionada,1);
       
       String tel=(String)this.tblRepresentantes.getValueAt(filaSeleccionada,2);
       
       //LLAMAR AL METODO DEL GESTOR PARA CARGAR AL REPRESENTANTE
       
       this.gestor.tomarRepresentanteProveedor(nombreRepre,appRepre);
         
     }
     else{
     //Poner en null al representante, con el nombre del atributo fk...
       this.gestor.tomarRepresentanteProveedor(null,null);
     }
    }    
    else{
     //Poner en null al representante, con el nombre del atributo fk...
       this.gestor.tomarRepresentanteProveedor(null,null);
    
    } 
   }
   
    
    public void solicitarConfirmacion(){
      int opcion=Mensaje.mensaje_Consulta_YES_NO_OPTION("¿Desea confirmar la registración del pedido?", "Confirmación Pedido", Mensaje.TIPO_INTERROGACION);
    
      boolean resp=true;
      
      if(opcion!=0){
       resp=false;
      }
      
      this.gestor.tomarConfirmacion(resp);
      
    }
    
    public void solicitarConfirmacionImpresion(){
      int opcion=Mensaje.mensaje_Consulta_YES_NO_OPTION("¿Desea imprimir el pedido?", "Confirmación Impresión Pedido", Mensaje.TIPO_INTERROGACION);
     
      boolean resp=true;
      
      if(opcion!=0){resp=false;}
      
      this.gestor.tomarConfirmacionImpresion(resp);
      
    }
    
    
    public void mostrarProductos(Lista productos){
     
        PllaDetallePedido pDlle=new PllaDetallePedido();
        this.gestor.setPllaDetalle(pDlle);
        
        pDlle.abrirVentana(productos,this.gestor);
  
    }
    
   private void abrirVentana(){
    
       Pantalla.centrarEnPantallaJDialog(this,4,8);
       
       this.lstProveedores.setModel(this.lstModelProveedor);
       this.tblRepresentantes.setModel(dtmRepresentantes);
       
       gestor.nuevoPedidoProveedor(this);
       
       this.mostrarFechaHoraCargaPlla();
       this.deshabilitarDatosPedido();
       
       this.setModal(true);
       this.setVisible(true);
       

   }
   
   private void mostrarFechaHoraCargaPlla(){
   
       Date fecha=new Date();
       fecha.setTime(System.currentTimeMillis());
       
       this.jCdarFRecepcion.setDate(fecha);
      
       this.jSpHoraRecepcion.setValue(new Integer(fecha.getHours()));
       this.jSpMinutoRecepcion.setValue(new Integer (fecha.getMinutes()));
    
       String fechaRealizacion=ValText.getFormatStringFecha(fecha);
       String horaRealizacion=ValText.getFormatStringHora(fecha);
       this.lblMuestraFechaRealizacion.setText(fechaRealizacion);
       this.lblMuestraHoraRealizacion.setText(horaRealizacion);
   
   }
   
   private void habilitarDatosPedido(){
    this.tblRepresentantes.setEnabled(true);

    this.jCdarFRecepcion.setEnabled(true);
    this.jSpHoraRecepcion.setEnabled(true);
    this.jSpMinutoRecepcion.setEnabled(true);
    this.btnDetallePedido.setEnabled(true);
    this.btnVerDetalle.setEnabled(true);
    
    this.btnNuevoPedido.setEnabled(true);
    this.btnRegistrarPedido.setEnabled(true);
  
   }
   
   private void deshabilitarDatosPedido(){
    this.tblRepresentantes.setEnabled(false);

    this.jCdarFRecepcion.setEnabled(false);
    this.jSpHoraRecepcion.setEnabled(false);
    this.jSpMinutoRecepcion.setEnabled(false);
    this.btnDetallePedido.setEnabled(false);
    this.btnVerDetalle.setEnabled(false);
    
    this.btnNuevoPedido.setEnabled(false);
    this.btnRegistrarPedido.setEnabled(false);
  
   }
   
   private void limpiarDatosPedido(){
    this.limpiarTablaRepresentantes();

    this.mostrarFechaHoraCargaPlla();
 
   }
   
   
   private void deshabiltarBusquedaProveedor(){
     this.txtRazonSocial.setEnabled(false);
     this.btnAceptar.setEnabled(false);
     this.lstProveedores.setEnabled(false);
     this.btnNuevoProveedor.setEnabled(false);
       
   }
   
   private void habilitarBusquedaProveedor(){
     this.txtRazonSocial.setEnabled(true);
     this.btnAceptar.setEnabled(true);
     this.lstProveedores.setEnabled(true);
     this.btnNuevoProveedor.setEnabled(true);
     
   }
   
   
    public void mostrarMensajePantalla(String mensaje,int tipoMensaje){
     Mensaje.mensaje_Estandar(mensaje,"Mensaje", tipoMensaje);
    }
    
    public void cerrarPantalla(){
     this.dispose();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDetallePedido;
    private javax.swing.JButton btnLlamadaCUTipo2;
    private javax.swing.JButton btnNuevoPedido;
    private javax.swing.JButton btnNuevoProveedor;
    private javax.swing.JButton btnRegistrarPedido;
    private javax.swing.JButton btnVerDetalle;
    private com.toedter.calendar.JDateChooser jCdarFRecepcion;
    private javax.swing.JPanel jPPedido;
    private javax.swing.JPanel jPProveedor;
    private javax.swing.JScrollPane jSPProveedores;
    private javax.swing.JScrollPane jSPRepresentantes;
    private javax.swing.JSpinner jSpHoraRecepcion;
    private javax.swing.JSpinner jSpMinutoRecepcion;
    private javax.swing.JLabel lblFechaRealizacion;
    private javax.swing.JLabel lblFechaRecepcion;
    private javax.swing.JLabel lblHoraRealizacion;
    private javax.swing.JLabel lblHoraRecepcion;
    private javax.swing.JLabel lblMuestraFechaRealizacion;
    private javax.swing.JLabel lblMuestraHoraRealizacion;
    private javax.swing.JLabel lblRazonSocial;
    private javax.swing.JLabel lblRepresentanteProveedor;
    private javax.swing.JLabel lblSeparadorHora;
    private javax.swing.JList lstProveedores;
    private javax.swing.JTable tblRepresentantes;
    private javax.swing.JTextField txtRazonSocial;
    // End of variables declaration//GEN-END:variables
    
}
