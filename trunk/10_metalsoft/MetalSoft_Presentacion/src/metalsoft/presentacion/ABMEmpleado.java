package metalsoft.presentacion;


/*
 * ABMEmpleado.java
 *
 * Created on 05/10/2010, 09:03:12
 */
import metalsoft.util.Fecha;
import metalsoft.util.EnumOpcionesABM;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import metalsoft.util.ItemCombo;
import metalsoft.negocio.gestores.GestorEmpleado;
import metalsoft.negocio.gestores.NumerosAMostrar;
import metalsoft.negocio.rrhh.Domicilio;
import metalsoft.negocio.rrhh.Empleado;
import metalsoft.util.Combo;
import java.util.LinkedList;

/**
 *
 * @author Vicky
 */
public class ABMEmpleado extends javax.swing.JFrame {

    private GestorEmpleado gestor;
    private Domicilio domicilioResponsable;
    private long idDomicilio;
    private long idResponsable;
    private Empleado empleado;
    private metalsoft.datos.dbobject.EmpleadoDB empleadoDB;
    private LinkedList turnos;
    private metalsoft.datos.dbobject.DomicilioDB domicilioResponsableDB;
    private EnumOpcionesABM opcion;
    private long idEmpleado;

    /** Creates new form ABMEmpleado */
    public ABMEmpleado() {
        initComponents();
        gestor = new GestorEmpleado();
        turnos=new LinkedList();
        cargarComboCategoria();
        cargarComboCargo();
        cargarComboProvincia(beanResponsable.getDomicilioResponsable().getCmbProvincia());
        cargarTipoDocumento();
        addListenerCmbProvincia();
        addListenerCmbLocalidad();
        setEnableComponents(false);
    }

    private void setEnableComponents(boolean b) {
        txtMotivoEgreso.setEnabled(b);
        txtUsuario.setEnabled(b);
        dccFechaEgreso.setEnabled(b);
        dccFechaIngreso.setEnabled(b);
        jpTurnos.setEnabled(b);
        cmbCargo.setEnabled(b);
        cmbCategoria.setEnabled(b);
        beanResponsable.setEnabled(b);
    }

    private void limpiarCampos() {
        txtMotivoEgreso.setText("");
        txtUsuario.setText("");
        ///hacer lo de las fechas
        dccFechaEgreso.setSelectedDate(null);
        dccFechaIngreso.setSelectedDate(null);
//        else{
//            GregorianCalendar gc=new GregorianCalendar();
//            gc.setTime(proveedorDB.getFechaalta());
//            dccFechaAlta.setSelectedDate(gc);
//        }
        lblNroCliente.setText("");
        cmbCargo.setSelectedIndex(0);
        cmbCategoria.setSelectedIndex(0);
        chkMañana.setSelected(false);
        chkNoche.setSelected(false);
        chkTarde.setSelected(false);
        beanResponsable.limpiarCampos();
    }

    public long getIdCliente() {
        return idEmpleado;
    }

    public void setIdCliente(long id) {
        this.idEmpleado = id;
    }

    private void addListenerCmbProvincia() {
        beanResponsable.getDomicilioResponsable().getCmbProvincia().addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProvinciaDomResponsableActionPerformed(evt);
            }
        });
    }

    private void addListenerCmbLocalidad() {
        beanResponsable.getDomicilioResponsable().getCmbLocalidad().addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLocalidadDomResponsableActionPerformed(evt);
            }
        });
    }

    private void cmbProvinciaDomResponsableActionPerformed(java.awt.event.ActionEvent evt) {
        JComboBox cmbProvincia = beanResponsable.getDomicilioResponsable().getCmbProvincia();
        JComboBox cmbLocalidad = beanResponsable.getDomicilioResponsable().getCmbLocalidad();
        JComboBox cmbBarrio = beanResponsable.getDomicilioResponsable().getCmbBarrio();
        cmbLocalidad.removeAllItems();
        cmbBarrio.removeAllItems();
        if (cmbProvincia.getSelectedIndex() > 0) {
            String indexString = ((ItemCombo) cmbProvincia.getSelectedItem()).getId();
            int index = Integer.parseInt(indexString);
            gestor.buscarLocalidadesDeProvincia(cmbLocalidad, index);
        }
    }

    private void cmbLocalidadDomResponsableActionPerformed(java.awt.event.ActionEvent evt) {
        JComboBox cmbLocalidad = beanResponsable.getDomicilioResponsable().getCmbLocalidad();
        JComboBox cmbBarrio = beanResponsable.getDomicilioResponsable().getCmbBarrio();
        cmbBarrio.removeAllItems();
        if (cmbLocalidad.getSelectedIndex() > 0) {
            String indexString = ((ItemCombo) cmbLocalidad.getSelectedItem()).getId();
            int index = Integer.parseInt(indexString);
            gestor.buscarBarriosDeLocalidad(cmbBarrio, index);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cmbCategoria = new javax.swing.JComboBox();
        beanResponsable = new metalsoft.beans.Responsable();
        lblNroCliente = new javax.swing.JLabel();
        dccFechaIngreso = new datechooser.beans.DateChooserCombo();
        dccFechaEgreso = new datechooser.beans.DateChooserCombo();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMotivoEgreso = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbCargo = new javax.swing.JComboBox();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jpTurnos = new javax.swing.JPanel();
        chkMañana = new javax.swing.JCheckBox();
        chkTarde = new javax.swing.JCheckBox();
        chkNoche = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Administrar Cliente"));

        jLabel1.setText("Legajo:");

        jLabel5.setText("Fecha Ingreso:");

        jLabel8.setText("Categoria:");

        jLabel13.setText("Fecha Egreso:");

        beanResponsable.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Personales"));

        lblNroCliente.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblNroCliente.setText("...");

        jLabel2.setText("Motivo de Egreso:");

        txtMotivoEgreso.setColumns(20);
        txtMotivoEgreso.setRows(5);
        jScrollPane1.setViewportView(txtMotivoEgreso);

        jLabel3.setText("Usuario:");

        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });

        jLabel4.setText("Cargo:");

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jpTurnos.setBorder(javax.swing.BorderFactory.createTitledBorder("Turnos"));

        chkMañana.setText("Mañana");

        chkTarde.setText("Tarde");
        chkTarde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTardeActionPerformed(evt);
            }
        });

        chkNoche.setText("Noche");

        javax.swing.GroupLayout jpTurnosLayout = new javax.swing.GroupLayout(jpTurnos);
        jpTurnos.setLayout(jpTurnosLayout);
        jpTurnosLayout.setHorizontalGroup(
            jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTurnosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkMañana)
                .addGap(18, 18, 18)
                .addComponent(chkTarde)
                .addGap(18, 18, 18)
                .addComponent(chkNoche)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jpTurnosLayout.setVerticalGroup(
            jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTurnosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpTurnosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkMañana)
                    .addComponent(chkTarde)
                    .addComponent(chkNoche)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpTurnos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNroCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cmbCategoria, javax.swing.GroupLayout.Alignment.LEADING, 0, 239, Short.MAX_VALUE)
                                    .addComponent(txtUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)))
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(22, 22, 22)
                                .addComponent(cmbCargo, 0, 239, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dccFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dccFechaEgreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beanResponsable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)
                        .addGap(5, 5, 5)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lblNroCliente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmbCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jpTurnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(dccFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dccFechaEgreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(beanResponsable, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNuevo)
                        .addComponent(btnGuardar))
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBuscar)
                        .addComponent(btnSalir)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 704, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtUsuarioActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        opcion = EnumOpcionesABM.NUEVO;
        setEnableComponents(true);
        limpiarCampos();
        long nroEmp = gestor.generarNvoNroEmpleado();
        Combo.setItemComboSeleccionado(cmbCategoria, 1);
        chkMañana.setSelected(false);
        chkNoche.setSelected(false);
        chkTarde.setSelected(false);
        lblNroCliente.setText(NumerosAMostrar.getNumeroString(NumerosAMostrar.NRO_CLIENTE, nroEmp));

}//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        long idCategoria = Long.parseLong(((ItemCombo) cmbCategoria.getSelectedItem()).getId());
        long idcargo = Long.parseLong(((ItemCombo) cmbCargo.getSelectedItem()).getId());
        
        if (chkMañana.isSelected() == true) {
            turnos.add((int)1);
        }
        if (chkTarde.isSelected() == true) {
            turnos.add((int)2);
        }
        if (chkNoche.isSelected() == true) {
            turnos.add((int)3);
        }
        long idBarrio = -1;
        if (((ItemCombo) beanResponsable.getDomicilioResponsable().getCmbBarrio().getSelectedItem()) != null) {
            idBarrio = Long.parseLong(((ItemCombo) beanResponsable.getDomicilioResponsable().getCmbBarrio().getSelectedItem()).getId());
        }
        long idLocalidad = -1;
        if (((ItemCombo) beanResponsable.getDomicilioResponsable().getCmbLocalidad().getSelectedItem()) != null) {
            idLocalidad = Long.parseLong(((ItemCombo) beanResponsable.getDomicilioResponsable().getCmbLocalidad().getSelectedItem()).getId());
        }

        long idProvincia = -1;
        if (((ItemCombo) beanResponsable.getDomicilioResponsable().getCmbProvincia().getSelectedItem()) != null) {
            idProvincia = Long.parseLong(((ItemCombo) beanResponsable.getDomicilioResponsable().getCmbProvincia().getSelectedItem()).getId());
        }

        long idTipoDoc = -1;
        if (((ItemCombo) beanResponsable.getCmbTipoDoc().getSelectedItem()) != null) {
            idTipoDoc = Long.parseLong(((ItemCombo) beanResponsable.getCmbTipoDoc().getSelectedItem()).getId());
        }

        //private long cargo;
        String motivoEgreso = txtMotivoEgreso.getText();
        String apeResp = beanResponsable.getTxtApellido().getText();
        String emaResp = beanResponsable.getTxtEmail().getText();
        String faxResp = beanResponsable.getTxtFax().getText();
        String nomResp = beanResponsable.getTxtNombre().getText();
        String telResp = beanResponsable.getTxtTelefono().getText();
        String calle = beanResponsable.getDomicilioResponsable().getTxtCalle().getText();
        String depto = beanResponsable.getDomicilioResponsable().getTxtDepto().getText();
        String nroCalle = beanResponsable.getDomicilioResponsable().getTxtNumero().getText();
        String piso = String.valueOf(beanResponsable.getDomicilioResponsable().getSldPiso().getValue());
        String torre = beanResponsable.getDomicilioResponsable().getTxtTorre().getText();


        Date fechaIngreso = null;
        if (dccFechaIngreso.getSelectedDate() != null) {
            fechaIngreso = (Date) dccFechaIngreso.getSelectedDate().getTime();
            empleado.setFechaIngreso(fechaIngreso);
        }
        Date fechaEgreso = null;
        if (dccFechaEgreso.getSelectedDate() != null) {
            fechaEgreso = dccFechaEgreso.getSelectedDate().getTime();
            empleado.setFechaEgreso(fechaEgreso);
        }


        domicilioResponsable = crearDomicilio(calle, depto, nroCalle, piso, torre);
        empleado.setDomicilio(domicilioResponsable);

        long nro = NumerosAMostrar.getNumeroLong(lblNroCliente.getText());
        String nroEmp = String.valueOf(nro);

        gestor.setIdBarrio(idBarrio);
        gestor.setIdLocalidad(idLocalidad);
        gestor.setIdProvincia(idProvincia);
        gestor.setIdcargo(idcargo);
        gestor.setIdcategoria(idCategoria);
        gestor.setIdturnos(turnos);
        gestor.setIdTipoDoc(idTipoDoc);

        idEmpleado = -1;

        switch (opcion) {
            case NUEVO:
                idEmpleado = gestor.registrarEmpleado(empleado);
                break;
            case MODIFICAR:
                gestor.setIdDomicilio(domicilioResponsableDB.getIddomicilio());

                idEmpleado = gestor.modificarCliente(empleado);
                break;
            default:
                break;
        }
        opcion = EnumOpcionesABM.GUARDAR;

        if (idEmpleado > 0) {
            JOptionPane.showMessageDialog(this, "El cliente se guardó correctamente");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo guardar el cliente");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        opcion = EnumOpcionesABM.MODIFICAR;
        setEnableComponents(true);
}//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int result = -1;
        java.sql.Date fechaBaja = new java.sql.Date(Fecha.parseToDate(Fecha.fechaActual(), "dd/MM/yyyy").getTime());
        empleadoDB.setFechaegreso(fechaBaja);
        gestor.setIdEmpleado(idEmpleado);
        result = gestor.bajaEmpleado(empleadoDB);
        if (result > 0) {
            JOptionPane.showMessageDialog(this, "El empleado se eliminó correctamente");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo eliminar el empleado");
        }
        opcion = EnumOpcionesABM.ELIMINAR;
}//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
//        opcion = EnumOpcionesABM.BUSCAR;
//        ABMCliente_Buscar buscar = null;
//        try {
//            buscar = (ABMCliente_Buscar) JFrameManager.crearVentana(ABMCliente_Buscar.class.getName());
//            buscar.setVentanaCliente(this);
//            buscar.setGestor(gestor);
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(ABMMatriz.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            Logger.getLogger(ABMMatriz.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            Logger.getLogger(ABMMatriz.class.getName()).log(Level.SEVERE, null, ex);
//        }
}//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
}//GEN-LAST:event_btnSalirActionPerformed

    private void chkTardeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTardeActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_chkTardeActionPerformed

    private Domicilio crearDomicilio(String calle, String depto, String nroCalle, String piso, String torre) {
        Domicilio dom = new Domicilio();
        dom.setCalle(calle);
        dom.setDepto(depto);
        if (nroCalle.compareTo("") != 0) {
            dom.setNumeroCalle(Integer.parseInt(nroCalle));
        }
        if (piso.compareTo("") != 0) {
            dom.setPiso(Integer.parseInt(piso));
        }
        dom.setTorre(torre);
        return dom;
    }

    private void cargarComboCategoria() {
        cmbCategoria.removeAllItems();
        gestor.obtenerCategorias(cmbCategoria);
    }

    private void cargarComboCargo() {
        cmbCargo.removeAllItems();
        gestor.obtenerCargos(cmbCargo);
    }

    public void cargarComboProvincia(JComboBox cmb) {
        cmb.removeAllItems();
        gestor.obtenerProvincias(cmb);
    }

    private void cargarTipoDocumento() {
        beanResponsable.getCmbTipoDoc().removeAllItems();
        gestor.obtenerTipoDocumentos(beanResponsable.getCmbTipoDoc());
    }

    public void clienteSeleccionado() {
        empleadoDB = gestor.buscarEmpleadoDB(idEmpleado);
        domicilioResponsableDB = gestor.buscarDomicilioEmpleadoDB(empleadoDB.getDomicilio());
        mostrarDatosEmpleado();
        setEnableComponents(false);
    }

    private void mostrarDatosEmpleado() {
        cargarComboCargo();
        cargarComboCategoria();
        cargarComboProvincia(beanResponsable.getDomicilioResponsable().getCmbProvincia());
        cargarTipoDocumento();
        setDatosEmpleado();
    }

    private void setDatosEmpleado() {

        if (empleadoDB.getFechaingreso() == null) {
            dccFechaIngreso.setSelectedDate(null);
        } else {
            GregorianCalendar gc = new GregorianCalendar();
            gc.setTime(empleadoDB.getFechaingreso());
            dccFechaIngreso.setSelectedDate(gc);
        }

        if (empleadoDB.getFechaegreso() == null) {
            dccFechaEgreso.setSelectedDate(null);
        } else {
            GregorianCalendar gcb = new GregorianCalendar();
            gcb.setTime(empleadoDB.getFechaegreso());
            dccFechaEgreso.setSelectedDate(gcb);
        }

        lblNroCliente.setText(NumerosAMostrar.getNumeroString(NumerosAMostrar.NRO_CLIENTE, empleadoDB.getLegajo()));
        txtMotivoEgreso.setText(empleadoDB.getMotivoegreso());
        txtUsuario.setText(empleado.getUsuario().getUser());
        if (empleadoDB.getCargo() < 1) {
            Combo.setItemComboSeleccionado(cmbCargo, -1);
        } else {
            Combo.setItemComboSeleccionado(cmbCargo, empleadoDB.getCargo());
        }
        if (empleadoDB.getCategoria() < 1) {
            Combo.setItemComboSeleccionado(cmbCategoria, -1);
        } else {
            Combo.setItemComboSeleccionado(cmbCategoria, empleadoDB.getCategoria());
        }

        for (int i = 0; i < turnos.length; i++) {
            switch (i) {
                case 1:
                    chkMañana.setSelected(true);
                    break;
                case 2:
                    chkTarde.setSelected(true);
                    break;
                case 3:
                    chkNoche.setSelected(true);
                    break;
            }
        }

        setDatosResponsable(empleadoDB, domicilioResponsableDB);
    }

    private void setDatosDomicilio(metalsoft.beans.Domicilio beanDom, metalsoft.datos.dbobject.DomicilioDB domDB) {
        beanDom.getTxtCalle().setText(domDB.getCalle());
        beanDom.getTxtDepto().setText(domDB.getDepto());
        beanDom.getTxtNumero().setText(String.valueOf(domDB.getNumerocalle()));
        beanDom.getTxtTorre().setText(domDB.getTorre());

        JComboBox cmbBarrio = beanDom.getCmbBarrio();
        JComboBox cmbLocalidad = beanDom.getCmbLocalidad();
        JComboBox cmbProvincia = beanDom.getCmbProvincia();

        metalsoft.datos.dbobject.Localidad locDB = gestor.buscarLocalidadDeBarrio(domDB.getBarrio());
        setItemComboSeleccionado(cmbProvincia, locDB.getProvincia());

        setItemComboSeleccionado(cmbLocalidad, locDB.getIdlocalidad());
        setItemComboSeleccionado(cmbBarrio, domDB.getBarrio());
    }

    private void setItemComboSeleccionado(JComboBox cmb, long id) {
        int length = cmb.getItemCount();
        ItemCombo item = null;
        for (int i = 0; i < length; i++) {
            item = (ItemCombo) cmb.getItemAt(i);
            if (Long.parseLong(item.getId()) == id) {
                cmb.setSelectedIndex(i);
                break;
            }
        }
    }

    private void setDatosResponsable(metalsoft.datos.dbobject.EmpleadoDB respDB, metalsoft.datos.dbobject.DomicilioDB domRespDB) {
        beanResponsable.getTxtApellido().setText(respDB.getApellido());
        beanResponsable.getTxtEmail().setText(respDB.getEmail());
        beanResponsable.getTxtNombre().setText(respDB.getNombre());
        beanResponsable.getTxtNroDoc().setText(String.valueOf(respDB.getNrodocumento()));
        beanResponsable.getTxtTelefono().setText(respDB.getTelefono());

        setItemComboSeleccionado(beanResponsable.getCmbTipoDoc(), respDB.getTipodocumento());

        metalsoft.beans.Domicilio beanDom = beanResponsable.getDomicilioResponsable();
        setDatosDomicilio(beanDom, domRespDB);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ABMEmpleado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private metalsoft.beans.Responsable beanResponsable;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JCheckBox chkMañana;
    private javax.swing.JCheckBox chkNoche;
    private javax.swing.JCheckBox chkTarde;
    private javax.swing.JComboBox cmbCargo;
    private javax.swing.JComboBox cmbCategoria;
    private datechooser.beans.DateChooserCombo dccFechaEgreso;
    private datechooser.beans.DateChooserCombo dccFechaIngreso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpTurnos;
    private javax.swing.JLabel lblNroCliente;
    private javax.swing.JTextArea txtMotivoEgreso;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
