/**
*					--DAO-Generator--
*
* Java code generated by the DAO-Generator developed by akcess(www.akcess.in)
* Date of code generation: Mon Jun 14 23:38:39 GYT 2010
*
* DAO-Generator Version 1.2
*
*/
package metalsoft.datos.idao;
import java.math.*;
import java.sql.*;
import java.net.URL;

import metalsoft.datos.exception.*;
import metalsoft.datos.dbobject.*;
public interface DetallecompraDAO
{
	public int insert(Detallecompra detallecompra, Connection con ) throws DetallecompraException;
	public int update(DetallecompraPK detallecomprapk, Detallecompra detallecompra, Connection con) throws DetallecompraException;
	public int delete(DetallecompraPK detallecomprapk, Connection con) throws DetallecompraException;
	public Detallecompra findByPrimaryKey(DetallecompraPK detallecomprapk , Connection con) throws DetallecompraException;
	public Detallecompra[] findAll(Connection con) throws DetallecompraException;
	public Detallecompra[] findByIddetalle(long iddetalle,Connection con) throws DetallecompraException;
	public Detallecompra[] findByIdcompra(long idcompra,Connection con) throws DetallecompraException;
	public Detallecompra[] findByCantidad(int cantidad,Connection con) throws DetallecompraException;
	public Detallecompra[] findByMateriaprima(long materiaprima,Connection con) throws DetallecompraException;
	public Detallecompra[] findByPreciohistorico(double preciohistorico,Connection con) throws DetallecompraException;
	public Detallecompra[] findByFecharecepcionparcial(Date fecharecepcionparcial,Connection con) throws DetallecompraException;
	public Detallecompra[] findExecutingUserSelect(String selectStatement, Object[] sqlParams, Connection con) throws DetallecompraException;
	public Detallecompra[] findExecutingUserWhere(String whereClause, Object[] sqlParams, Connection con) throws DetallecompraException;
}
