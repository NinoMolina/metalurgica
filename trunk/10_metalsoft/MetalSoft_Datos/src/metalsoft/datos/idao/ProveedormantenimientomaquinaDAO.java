/**
*					--DAO-Generator--
*
* Java code generated by the DAO-Generator developed by akcess(www.akcess.in)
* Date of code generation: Mon Jun 14 23:39:51 GYT 2010
*
* DAO-Generator Version 1.2
*
*/
package metalsoft.datos.idao;
import java.math.*;
import java.sql.*;
import java.net.URL;
import java.util.Collection;
import java.util.ArrayList;
import metalsoft.datos.exception.*;
import metalsoft.datos.dbobject.*;
public interface ProveedormantenimientomaquinaDAO
{
	public int insert(Proveedormantenimientomaquina proveedormantenimientomaquina, Connection con ) throws ProveedormantenimientomaquinaException;
	public int update(ProveedormantenimientomaquinaPK proveedormantenimientomaquinapk, Proveedormantenimientomaquina proveedormantenimientomaquina, Connection con) throws ProveedormantenimientomaquinaException;
	public int delete(ProveedormantenimientomaquinaPK proveedormantenimientomaquinapk, Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina findByPrimaryKey(ProveedormantenimientomaquinaPK proveedormantenimientomaquinapk , Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findAll(Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByIdproveedormantenimiento(long idproveedormantenimiento,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByNroproveedor(long nroproveedor,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByRazonsocial(String razonsocial,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByResponsable(long responsable,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByTelefono(String telefono,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByCelular(String celular,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByMail(String mail,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByDomicilio(long domicilio,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByFechaalta(Date fechaalta,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByFechabaja(Date fechabaja,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByCuil(String cuil,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByCondicioniva(long condicioniva,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findByCuit(String cuit,Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findExecutingUserSelect(String selectStatement, Object[] sqlParams, Connection con) throws ProveedormantenimientomaquinaException;
	public Proveedormantenimientomaquina[] findExecutingUserWhere(String whereClause, Object[] sqlParams, Connection con) throws ProveedormantenimientomaquinaException;
}
