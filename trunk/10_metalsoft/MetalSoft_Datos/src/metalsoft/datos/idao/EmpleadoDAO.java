/**
*					--DAO-Generator--
*
* Java code generated by the DAO-Generator developed by akcess(www.akcess.in)
* Date of code generation: Sun Jun 27 03:16:02 ART 2010
*
* DAO-Generator Version 1.2
*
*/
package metalsoft.datos.idao;
import java.math.*;
import java.sql.*;
import java.net.URL;
import java.util.Collection;
import java.util.ArrayList;
import metalsoft.datos.exception.*;
import metalsoft.datos.dbobject.*;
public interface EmpleadoDAO
{
	public int insert(Empleado empleado, Connection con ) throws EmpleadoException;
	public int update(EmpleadoPK empleadopk, Empleado empleado, Connection con) throws EmpleadoException;
	public int delete(EmpleadoPK empleadopk, Connection con) throws EmpleadoException;
	public Empleado findByPrimaryKey(EmpleadoPK empleadopk , Connection con) throws EmpleadoException;
	public Empleado[] findAll(Connection con) throws EmpleadoException;
	public Empleado[] findByIdempleado(long idempleado,Connection con) throws EmpleadoException;
	public Empleado[] findByLegajo(long legajo,Connection con) throws EmpleadoException;
	public Empleado[] findByFechaingreso(Date fechaingreso,Connection con) throws EmpleadoException;
	public Empleado[] findByNombre(String nombre,Connection con) throws EmpleadoException;
	public Empleado[] findByApellido(String apellido,Connection con) throws EmpleadoException;
	public Empleado[] findByTelefono(String telefono,Connection con) throws EmpleadoException;
	public Empleado[] findByEmail(String email,Connection con) throws EmpleadoException;
	public Empleado[] findByDomicilio(long domicilio,Connection con) throws EmpleadoException;
	public Empleado[] findByNrodocumento(int nrodocumento,Connection con) throws EmpleadoException;
	public Empleado[] findByTipodocumento(long tipodocumento,Connection con) throws EmpleadoException;
	public Empleado[] findByCategoria(long categoria,Connection con) throws EmpleadoException;
	public Empleado[] findByUsuario(long usuario,Connection con) throws EmpleadoException;
	public Empleado[] findByFechaegreso(Date fechaegreso,Connection con) throws EmpleadoException;
	public Empleado[] findByMotivoegreso(String motivoegreso,Connection con) throws EmpleadoException;
	public Empleado[] findByCargo(long cargo,Connection con) throws EmpleadoException;
	public Empleado[] findExecutingUserSelect(String selectStatement, Object[] sqlParams, Connection con) throws EmpleadoException;
	public Empleado[] findExecutingUserWhere(String whereClause, Object[] sqlParams, Connection con) throws EmpleadoException;
}
