/**
*					--DAO-Generator--
*
* Java code generated by the DAO-Generator developed by akcess(www.akcess.in)
* Date of code generation: Sun Jun 27 03:16:03 ART 2010
*
* DAO-Generator Version 1.2
*
*/
package metalsoft.datos.idao;
import java.math.*;
import java.sql.*;
import java.net.URL;
import java.util.Collection;
import java.util.ArrayList;
import metalsoft.datos.exception.*;
import metalsoft.datos.dbobject.*;
public interface PedidoDAO
{
	public int insert(Pedido pedido, Connection con ) throws PedidoException;
	public int update(PedidoPK pedidopk, Pedido pedido, Connection con) throws PedidoException;
	public int delete(PedidoPK pedidopk, Connection con) throws PedidoException;
	public Pedido findByPrimaryKey(PedidoPK pedidopk , Connection con) throws PedidoException;
	public Pedido[] findAll(Connection con) throws PedidoException;
	public Pedido[] findByNropedido(long nropedido,Connection con) throws PedidoException;
	public Pedido[] findByFechaconfirmacionpedido(Date fechaconfirmacionpedido,Connection con) throws PedidoException;
	public Pedido[] findByFechaentregaestipulada(Date fechaentregaestipulada,Connection con) throws PedidoException;
	public Pedido[] findByFechapedidocotizacion(Date fechapedidocotizacion,Connection con) throws PedidoException;
	public Pedido[] findByFechacancelacion(Date fechacancelacion,Connection con) throws PedidoException;
	public Pedido[] findByFechaentregareal(Date fechaentregareal,Connection con) throws PedidoException;
	public Pedido[] findByPriodidad(String priodidad,Connection con) throws PedidoException;
	public Pedido[] findByEstado(long estado,Connection con) throws PedidoException;
	public Pedido[] findByFactura(long factura,Connection con) throws PedidoException;
	public Pedido[] findByPresupuesto(long presupuesto,Connection con) throws PedidoException;
	public Pedido[] findByFecharequeridacotizacion(Date fecharequeridacotizacion,Connection con) throws PedidoException;
	public Pedido[] findByPlano(long plano,Connection con) throws PedidoException;
	public Pedido[] findByMotivocancelacion(String motivocancelacion,Connection con) throws PedidoException;
	public Pedido[] findByEspedidoweb(boolean espedidoweb,Connection con) throws PedidoException;
	public Pedido[] findByNropedidocotizacioncliente(int nropedidocotizacioncliente,Connection con) throws PedidoException;
	public Pedido[] findByFecharegpedcotiz(Date fecharegpedcotiz,Connection con) throws PedidoException;
	public Pedido[] findByIdpedido(long idpedido,Connection con) throws PedidoException;
	public Pedido[] findByCliente(long cliente,Connection con) throws PedidoException;
	public Pedido[] findByPlanprocedimientos(long planprocedimientos,Connection con) throws PedidoException;
	public Pedido[] findByPlanrequerimientosmateriaprima(long planrequerimientosmateriaprima,Connection con) throws PedidoException;
	public Pedido[] findByPlanprocesoscalidad(long planprocesoscalidad,Connection con) throws PedidoException;
	public Pedido[] findExecutingUserSelect(String selectStatement, Object[] sqlParams, Connection con) throws PedidoException;
	public Pedido[] findExecutingUserWhere(String whereClause, Object[] sqlParams, Connection con) throws PedidoException;
}
