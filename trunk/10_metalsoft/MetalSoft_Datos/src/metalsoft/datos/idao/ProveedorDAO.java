/**
*					--DAO-Generator--
*
* Java code generated by the DAO-Generator developed by akcess(www.akcess.in)
* Date of code generation: Tue Jun 22 00:02:10 ART 2010
*
* DAO-Generator Version 1.2
*
*/
package metalsoft.datos.idao;
import java.math.*;
import java.sql.*;
import java.net.URL;
import java.util.*;
import metalsoft.datos.exception.*;
import metalsoft.datos.dbobject.*;
public interface ProveedorDAO
{
	public int insert(Proveedor proveedor, Connection con ) throws ProveedorException;
	public int update(ProveedorPK proveedorpk, Proveedor proveedor, Connection con) throws ProveedorException;
	public int delete(ProveedorPK proveedorpk, Connection con) throws ProveedorException;
	public Proveedor findByPrimaryKey(ProveedorPK proveedorpk , Connection con) throws ProveedorException;
	public Proveedor[] findAll(Connection con) throws ProveedorException;
	public Proveedor[] findByIdproveedor(long idproveedor,Connection con) throws ProveedorException;
	public Proveedor[] findByNroproveedor(long nroproveedor,Connection con) throws ProveedorException;
	public Proveedor[] findByRazonsocial(String razonsocial,Connection con) throws ProveedorException;
	public Proveedor[] findByResponsable(long responsable,Connection con) throws ProveedorException;
	public Proveedor[] findByTelefono(String telefono,Connection con) throws ProveedorException;
	public Proveedor[] findByCelular(String celular,Connection con) throws ProveedorException;
	public Proveedor[] findByMail(String mail,Connection con) throws ProveedorException;
	public Proveedor[] findByDomicilio(long domicilio,Connection con) throws ProveedorException;
	public Proveedor[] findByFechaalta(Date fechaalta,Connection con) throws ProveedorException;
	public Proveedor[] findByFechabaja(Date fechabaja,Connection con) throws ProveedorException;
	public Proveedor[] findByCuil(String cuil,Connection con) throws ProveedorException;
	public Proveedor[] findByCondicion(long condicion,Connection con) throws ProveedorException;
	public Proveedor[] findByCuit(String cuit,Connection con) throws ProveedorException;
	public Proveedor[] findExecutingUserSelect(String selectStatement, Object[] sqlParams, Connection con) throws ProveedorException;
	public Proveedor[] findExecutingUserWhere(String whereClause, Object[] sqlParams, Connection con) throws ProveedorException;
}
