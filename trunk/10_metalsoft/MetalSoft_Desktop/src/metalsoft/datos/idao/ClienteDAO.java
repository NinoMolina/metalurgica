/**
*					--DAO-Generator--
*
* Java code generated by the DAO-Generator developed by akcess(www.akcess.in)
* Date of code generation: Sun Jun 27 03:16:01 ART 2010
*
* DAO-Generator Version 1.2
*
*/
package metalsoft.datos.idao;
import java.math.*;
import java.sql.*;
import java.net.URL;
import java.util.Collection;
import java.util.ArrayList;
import metalsoft.datos.exception.*;
import metalsoft.datos.dbobject.*;
public interface ClienteDAO
{
	public int insert(ClienteDB cliente, Connection con ) throws ClienteException;
	public int update(ClientePKDB clientepk, ClienteDB cliente, Connection con) throws ClienteException;
	public int delete(ClientePKDB clientepk, Connection con) throws ClienteException;
	public ClienteDB findByPrimaryKey(ClientePKDB clientepk , Connection con) throws ClienteException;
	public ClienteDB[] findAll(Connection con) throws ClienteException;
	public ClienteDB[] findByNrocliente(long nrocliente,Connection con) throws ClienteException;
	public ClienteDB[] findByIdcliente(long idcliente,Connection con) throws ClienteException;
	public ClienteDB[] findByPrioridad(long prioridad,Connection con) throws ClienteException;
	public ClienteDB[] findByEstado(long estado,Connection con) throws ClienteException;
	public ClienteDB[] findByEsmoroso(boolean esmoroso,Connection con) throws ClienteException;
	public ClienteDB[] findByUsuario(long usuario,Connection con) throws ClienteException;
	public ClienteDB[] findByRazonsocial(String razonsocial,Connection con) throws ClienteException;
	public ClienteDB[] findByResponsable(long responsable,Connection con) throws ClienteException;
	public ClienteDB[] findByTelefono(String telefono,Connection con) throws ClienteException;
	public ClienteDB[] findByCelular(String celular,Connection con) throws ClienteException;
	public ClienteDB[] findByMail(String mail,Connection con) throws ClienteException;
	public ClienteDB[] findByDomicilio(long domicilio,Connection con) throws ClienteException;
	public ClienteDB[] findByFechaalta(Date fechaalta,Connection con) throws ClienteException;
	public ClienteDB[] findByFechabaja(Date fechabaja,Connection con) throws ClienteException;
	public ClienteDB[] findByCuil(String cuil,Connection con) throws ClienteException;
	public ClienteDB[] findByCondicioniva(long condicioniva,Connection con) throws ClienteException;
	public ClienteDB[] findByCuit(String cuit,Connection con) throws ClienteException;
	public ClienteDB[] findExecutingUserSelect(String selectStatement, Object[] sqlParams, Connection con) throws ClienteException;
	public ClienteDB[] findExecutingUserWhere(String whereClause, Object[] sqlParams, Connection con) throws ClienteException;
}
