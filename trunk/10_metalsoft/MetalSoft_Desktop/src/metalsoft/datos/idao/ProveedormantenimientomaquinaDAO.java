/**
*					--DAO-Generator--
*
* Java code generated by the DAO-Generator developed by akcess(www.akcess.in)
* Date of code generation: Sun Jun 27 03:16:04 ART 2010
*
* DAO-Generator Version 1.2
*
*/
package metalsoft.datos.idao;
import java.math.*;
import java.sql.*;
import java.net.URL;
import java.util.Collection;
import java.util.ArrayList;
import metalsoft.datos.exception.*;
import metalsoft.datos.dbobject.*;
public interface ProveedormantenimientomaquinaDAO
{
	public int insert(ProveedormantenimientomaquinaDB proveedormantenimientomaquina, Connection con ) throws ProveedormantenimientomaquinaException;
	public int update(ProveedormantenimientomaquinaPKDB proveedormantenimientomaquinapk, ProveedormantenimientomaquinaDB proveedormantenimientomaquina, Connection con) throws ProveedormantenimientomaquinaException;
	public int delete(ProveedormantenimientomaquinaPKDB proveedormantenimientomaquinapk, Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB findByPrimaryKey(ProveedormantenimientomaquinaPKDB proveedormantenimientomaquinapk , Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findAll(Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByIdproveedormantenimiento(long idproveedormantenimiento,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByNroproveedor(long nroproveedor,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByRazonsocial(String razonsocial,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByResponsable(long responsable,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByTelefono(String telefono,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByCelular(String celular,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByMail(String mail,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByDomicilio(long domicilio,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByFechaalta(Date fechaalta,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByFechabaja(Date fechabaja,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByCuil(String cuil,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByCondicioniva(long condicioniva,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findByCuit(String cuit,Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findExecutingUserSelect(String selectStatement, Object[] sqlParams, Connection con) throws ProveedormantenimientomaquinaException;
	public ProveedormantenimientomaquinaDB[] findExecutingUserWhere(String whereClause, Object[] sqlParams, Connection con) throws ProveedormantenimientomaquinaException;
}
