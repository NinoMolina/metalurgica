/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PedidosSinArmar.java
 *
 * Created on 13/09/2011, 19:40:30
 */

package metalsoft.beans;

import java.util.LinkedList;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;
import metalsoft.negocio.gestores.ViewPedidoConCalidad;
import metalsoft.util.Fecha;
import org.jdesktop.swingx.JXTable;
import org.jdesktop.swingx.decorator.HighlightPredicate;
import org.jdesktop.swingx.decorator.HighlighterFactory.UIColorHighlighter;

/**
 *
 * @author Mariana
 */
public class PedidosSinArmar extends javax.swing.JPanel implements java.beans.Customizer {

    private Object bean;
    private LinkedList<ViewPedidoConCalidad> filasPedidos;

    /** Creates new form PedidosSinArmar */
    public PedidosSinArmar() {
        initComponents();
        setTabla();
    }


    private void setTabla(){
        tblPedidos.setModel(new PedidoTableModel());
        tblPedidos.setColumnControlVisible(true);
        /* On supprime les traits des lignes et des colonnes */
        tblPedidos.setShowHorizontalLines(false);
        tblPedidos.setShowVerticalLines(false);
        /* On dit de surligner une ligne sur deux */
        tblPedidos.setHighlighters(
                new UIColorHighlighter(HighlightPredicate.ODD));
    }

    public void setObject(Object bean) {
        this.bean = bean;
    }

    public LinkedList<ViewPedidoConCalidad> getFilasPedidos() {
        return filasPedidos;
    }

    public void setFilasPedidos(LinkedList<ViewPedidoConCalidad> filasPedidos) {
        this.filasPedidos = filasPedidos;
    }

    public void updateTblPedidos()
    {
        tblPedidos.updateUI();
    }

    public JButton getBtnSeleccionarPedido() {
        return btnSeleccionar.getBtnSeleccionar();
    }

    public void setBtnSeleccionarPedido(JButton btnSeleccionarPedido) {
        this.btnSeleccionar.setBtnSeleccionar(btnSeleccionarPedido);
    }

    public JTable getTblPedidos() {
        return tblPedidos;
    }

    public void setTblPedidos(JXTable tblPedidos) {
        this.tblPedidos = tblPedidos;
    }



    @Override
    public void setEnabled(boolean enabled) {
        super.setEnabled(enabled);
        btnSeleccionar.setEnabled(enabled);
        tblPedidos.setEnabled(enabled);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSeleccionar = new metalsoft.beans.BtnSeleccionar();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPedidos = new org.jdesktop.swingx.JXTable();

        jScrollPane1.setViewportView(tblPedidos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(570, Short.MAX_VALUE)
                        .addComponent(btnSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSeleccionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private metalsoft.beans.BtnSeleccionar btnSeleccionar;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTable tblPedidos;
    // End of variables declaration//GEN-END:variables

    class PedidoTableModel extends AbstractTableModel
    {
        String[] columnNames = {"Nro",
                        "Nro Ped Cliente",
                        "Ped Cotizacion",
                        "Cot Req Para",
                        "Entrega Estipulada"};

        public Object getValueAt(int rowIndex, int columnIndex)
        {

            ViewPedidoConCalidad view= filasPedidos.get(rowIndex);
    //      Object[] df=filas.get(rowIndex);
            switch(columnIndex)
            {
            case 0:
              return "PEDI-"+view.getNropedido();
            case 1:
              return view.getNropedidocotizacioncliente();
            case 2:
              return Fecha.parseToString(view.getFechapedidocotizacion().getTime());
            case 3:
              return Fecha.parseToString(view.getFecharequeridacotizacion().getTime());
            case 4:
              if(view.getFechaentregaestipulada()==null)return "";
              else return Fecha.parseToString(view.getFechaentregaestipulada().getTime());
           default:
              return null;
            }

        }

        /**
         * Retorna la cantidad de columnas que tiene la tabla
         * @return Numero de filas que contendra la tabla
         */
        public int getColumnCount()
        {
          return columnNames.length;
        }

        public int getRowCount()
        {
          if(filasPedidos!=null)
            return filasPedidos.size();
          return 0;
        }

        /**
         * Devuelve el nombre de las columnas para mostrar en el encabezado
         * @param column Numero de la columna cuyo nombre se quiere
         * @return Nombre de la columna
         */

        @Override
        public String getColumnName(int column)
        {
          return columnNames[column];

        }
    }

}
