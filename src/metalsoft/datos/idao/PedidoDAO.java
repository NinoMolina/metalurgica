/**
*					--DAO-Generator--
*
* Java code generated by the DAO-Generator developed by akcess(www.akcess.in)
* Date of code generation: Mon Aug 23 21:29:20 ART 2010
*
* DAO-Generator Version 1.2
*
*/
package metalsoft.datos.idao;
import java.math.*;
import java.sql.*;
import java.net.URL;
import java.util.Collection;
import java.util.ArrayList;
import metalsoft.datos.exception.*;
import metalsoft.datos.dbobject.*;
public interface PedidoDAO
{
	public int insert(PedidoDB pedido, Connection con ) throws PedidoException;
	public int update(PedidoPKDB pedidopk, PedidoDB pedido, Connection con) throws PedidoException;
	public int delete(PedidoPKDB pedidopk, Connection con) throws PedidoException;
	public PedidoDB findByPrimaryKey(PedidoPKDB pedidopk , Connection con) throws PedidoException;
	public PedidoDB[] findAll(Connection con) throws PedidoException;
	public PedidoDB[] findByNropedido(long nropedido,Connection con) throws PedidoException;
	public PedidoDB[] findByFechaconfirmacionpedido(Date fechaconfirmacionpedido,Connection con) throws PedidoException;
	public PedidoDB[] findByFechaentregaestipulada(Date fechaentregaestipulada,Connection con) throws PedidoException;
	public PedidoDB[] findByFechapedidocotizacion(Date fechapedidocotizacion,Connection con) throws PedidoException;
	public PedidoDB[] findByFechacancelacion(Date fechacancelacion,Connection con) throws PedidoException;
	public PedidoDB[] findByFechaentregareal(Date fechaentregareal,Connection con) throws PedidoException;
	public PedidoDB[] findByEstado(long estado,Connection con) throws PedidoException;
	public PedidoDB[] findByFactura(long factura,Connection con) throws PedidoException;
	public PedidoDB[] findByPresupuesto(long presupuesto,Connection con) throws PedidoException;
	public PedidoDB[] findByFecharequeridacotizacion(Date fecharequeridacotizacion,Connection con) throws PedidoException;
	public PedidoDB[] findByPlano(long plano,Connection con) throws PedidoException;
	public PedidoDB[] findByMotivocancelacion(String motivocancelacion,Connection con) throws PedidoException;
	public PedidoDB[] findByEspedidoweb(boolean espedidoweb,Connection con) throws PedidoException;
	public PedidoDB[] findByNropedidocotizacioncliente(int nropedidocotizacioncliente,Connection con) throws PedidoException;
	public PedidoDB[] findByFecharegpedcotiz(Date fecharegpedcotiz,Connection con) throws PedidoException;
	public PedidoDB[] findByIdpedido(long idpedido,Connection con) throws PedidoException;
	public PedidoDB[] findByCliente(long cliente,Connection con) throws PedidoException;
	public PedidoDB[] findByPlanprocedimientos(long planprocedimientos,Connection con) throws PedidoException;
	public PedidoDB[] findByPlanrequerimientosmateriaprima(long planrequerimientosmateriaprima,Connection con) throws PedidoException;
	public PedidoDB[] findByPlanprocesoscalidad(long planprocesoscalidad,Connection con) throws PedidoException;
	public PedidoDB[] findByPrioridad(long prioridad,Connection con) throws PedidoException;
	public PedidoDB[] findExecutingUserSelect(String selectStatement, Object[] sqlParams, Connection con) throws PedidoException;
	public PedidoDB[] findExecutingUserWhere(String whereClause, Object[] sqlParams, Connection con) throws PedidoException;
    public PedidoDB[] findByClienteAndEstado(long cliente, long estado, Connection con) throws PedidoException;
}
