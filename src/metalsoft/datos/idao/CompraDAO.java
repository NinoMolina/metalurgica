/**
*					--DAO-Generator--
*
* Java code generated by the DAO-Generator developed by akcess(www.akcess.in)
* Date of code generation: Sun Jun 27 03:16:01 ART 2010
*
* DAO-Generator Version 1.2
*
*/
package metalsoft.datos.idao;
import java.math.*;
import java.sql.*;
import java.net.URL;
import java.util.Collection;
import java.util.ArrayList;
import metalsoft.datos.exception.*;
import metalsoft.datos.dbobject.*;
public interface CompraDAO
{
	public int insert(CompraDB compra, Connection con ) throws CompraException;
	public int update(CompraPKDB comprapk, CompraDB compra, Connection con) throws CompraException;
	public int delete(CompraPKDB comprapk, Connection con) throws CompraException;
	public CompraDB findByPrimaryKey(CompraPKDB comprapk , Connection con) throws CompraException;
	public CompraDB[] findAll(Connection con) throws CompraException;
	public CompraDB[] findByIdcompra(long idcompra,Connection con) throws CompraException;
	public CompraDB[] findByNrocompra(long nrocompra,Connection con) throws CompraException;
	public CompraDB[] findByFechacompra(Date fechacompra,Connection con) throws CompraException;
	public CompraDB[] findByVigencia(Date vigencia,Connection con) throws CompraException;
	public CompraDB[] findByDocumentoremito(long documentoremito,Connection con) throws CompraException;
	public CompraDB[] findByPreciototal(double preciototal,Connection con) throws CompraException;
	public CompraDB[] findByEstado(long estado,Connection con) throws CompraException;
	public CompraDB[] findByMotivo(String motivo,Connection con) throws CompraException;
	public CompraDB[] findByProveedor(long proveedor,Connection con) throws CompraException;
	public CompraDB[] findExecutingUserSelect(String selectStatement, Object[] sqlParams, Connection con) throws CompraException;
	public CompraDB[] findExecutingUserWhere(String whereClause, Object[] sqlParams, Connection con) throws CompraException;
}
