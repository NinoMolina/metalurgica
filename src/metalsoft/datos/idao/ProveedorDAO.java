/**
*					--DAO-Generator--
*
* Java code generated by the DAO-Generator developed by akcess(www.akcess.in)
* Date of code generation: Sun Jun 27 03:16:04 ART 2010
*
* DAO-Generator Version 1.2
*
*/
package metalsoft.datos.idao;
import java.math.*;
import java.sql.*;
import java.net.URL;
import java.util.Collection;
import java.util.ArrayList;
import metalsoft.datos.exception.*;
import metalsoft.datos.dbobject.*;
public interface ProveedorDAO
{
	public int insert(ProveedorDB proveedor, Connection con ) throws ProveedorException;
	public int update(ProveedorPKDB proveedorpk, ProveedorDB proveedor, Connection con) throws ProveedorException;
	public int delete(ProveedorPKDB proveedorpk, Connection con) throws ProveedorException;
	public ProveedorDB findByPrimaryKey(ProveedorPKDB proveedorpk , Connection con) throws ProveedorException;
	public ProveedorDB[] findAll(Connection con) throws ProveedorException;
	public ProveedorDB[] findByIdproveedor(long idproveedor,Connection con) throws ProveedorException;
	public ProveedorDB[] findByNroproveedor(long nroproveedor,Connection con) throws ProveedorException;
	public ProveedorDB[] findByRazonsocial(String razonsocial,Connection con) throws ProveedorException;
	public ProveedorDB[] findByResponsable(long responsable,Connection con) throws ProveedorException;
	public ProveedorDB[] findByTelefono(String telefono,Connection con) throws ProveedorException;
	public ProveedorDB[] findByCelular(String celular,Connection con) throws ProveedorException;
	public ProveedorDB[] findByMail(String mail,Connection con) throws ProveedorException;
	public ProveedorDB[] findByDomicilio(long domicilio,Connection con) throws ProveedorException;
	public ProveedorDB[] findByFechaalta(Date fechaalta,Connection con) throws ProveedorException;
	public ProveedorDB[] findByFechabaja(Date fechabaja,Connection con) throws ProveedorException;
	public ProveedorDB[] findByCuil(String cuil,Connection con) throws ProveedorException;
	public ProveedorDB[] findByCondicion(long condicion,Connection con) throws ProveedorException;
	public ProveedorDB[] findByCuit(String cuit,Connection con) throws ProveedorException;
	public ProveedorDB[] findExecutingUserSelect(String selectStatement, Object[] sqlParams, Connection con) throws ProveedorException;
	public ProveedorDB[] findExecutingUserWhere(String whereClause, Object[] sqlParams, Connection con) throws ProveedorException;
}
